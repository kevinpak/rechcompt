{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kevinpak/Documents/rechcompt/app/components/_M-UI/popover/popover.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\n\nvar PopoverBtn = function PopoverBtn(props) {\n  _s();\n\n  var _props$label, _props$content;\n\n  var _useState = useState(null),\n      anchorEl = _useState[0],\n      setAnchorEl = _useState[1]; //When clicked\n\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget); //console.log(anchorEl)\n  }; //For close\n\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var open = Boolean(anchorEl);\n  var id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      \"aria-describedby\": id,\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleClick,\n      children: (_props$label = props.label) !== null && _props$label !== void 0 ? _props$label : 'Open Popover'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: id,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      children: (_props$content = props.content) !== null && _props$content !== void 0 ? _props$content : 'Popover Content'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(PopoverBtn, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n\n_c = PopoverBtn;\nexport default PopoverBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopoverBtn\");","map":{"version":3,"sources":["/home/kevinpak/Documents/rechcompt/app/components/_M-UI/popover/popover.tsx"],"names":["useState","Popover","Button","PopoverBtn","props","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","label","vertical","horizontal","content"],"mappings":";;;;;;;AAAA,SAAQA,QAAR,QAAkC,OAAlC;AAGA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAAA;;AAAA,kBACIJ,QAAQ,CAAC,IAAD,CADZ;AAAA,MACrBK,QADqB;AAAA,MACXC,WADW,iBAG5B;;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7BF,IAAAA,WAAW,CAACE,KAAK,CAACC,aAAP,CAAX,CAD6B,CAE7B;AACD,GAHD,CAJ4B,CAS5B;;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,MAAMK,IAAI,GAAGC,OAAO,CAACP,QAAD,CAApB;AACA,MAAMQ,EAAE,GAAGF,IAAI,GAAG,gBAAH,GAAsBG,SAArC;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,0BAAkBD,EAA1B;AAA8B,MAAA,OAAO,EAAC,WAAtC;AAAkD,MAAA,KAAK,EAAC,SAAxD;AAAkE,MAAA,OAAO,EAAEN,WAA3E;AAAA,gCACGH,KAAK,CAACW,KADT,uDACgB;AADhB;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,OAAD;AACE,MAAA,EAAE,EAAEF,EADN;AAEE,MAAA,IAAI,EAAEF,IAFR;AAGE,MAAA,QAAQ,EAAEN,QAHZ;AAIE,MAAA,OAAO,EAAEK,WAJX;AAKE,MAAA,YAAY,EAAE;AACZM,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OALhB;AAAA,kCAYEb,KAAK,CAACc,OAZR,2DAYiB;AAZjB;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA,kBADF;AAsBD,CAvCD;;GAAMf,U;;KAAAA,U;AAwCN,eAAeA,UAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport styles from './popocer.module.scss'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Popover from '@material-ui/core/Popover'\nimport Button from '@material-ui/core/Button'\n\n\nconst PopoverBtn = (props) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  //When clicked\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n    //console.log(anchorEl)\n  };\n\n  //For close\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n  return (\n    <>\n      <Button aria-describedby={id} variant=\"contained\" color=\"primary\" onClick={handleClick}>\n        {props.label??'Open Popover'}\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n       \n        \n      >\n       {props.content??'Popover Content'}\n      </Popover>\n\n    </>\n  )\n}\nexport default PopoverBtn"]},"metadata":{},"sourceType":"module"}