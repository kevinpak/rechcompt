{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/kevinpak/Documents/rechcompt/app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kevinpak/Documents/rechcompt/app/components/_M-UI/table/table.tsx\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport styles from './table.module.scss';\nimport { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport makeData from './makeData';\n\nvar TableCpn = function TableCpn() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  /*\n  *\n  */\n  var Table = function Table(_ref) {\n    _s();\n\n    var columns = _ref.columns,\n        data = _ref.data;\n\n    // Use the state and functions returned from useTable to build your UI\n    var _useTable = useTable({\n      columns: columns,\n      data: data\n    }),\n        getTableProps = _useTable.getTableProps,\n        getTableBodyProps = _useTable.getTableBodyProps,\n        headerGroups = _useTable.headerGroups,\n        rows = _useTable.rows,\n        prepareRow = _useTable.prepareRow;\n\n    return /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n            children: headerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                children: column.render('Header')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: rows.map(function (row, i) {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            children: row.cells.map(function (cell) {\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                children: cell.render('Cell')\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 26\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, _this);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this);\n  };\n  /*\n  *\n  */\n\n\n  _s(Table, \"pmT4Wvyu5l7gpXiMsraUW0N0RNk=\", false, function () {\n    return [useTable];\n  });\n\n  var columns = useMemo(function () {\n    return [{\n      Header: 'Name',\n      columns: [{\n        Header: 'First Name',\n        accessor: 'firstName'\n      }, {\n        Header: 'Last Name',\n        accessor: 'lastName'\n      }]\n    }, {\n      Header: 'Info',\n      columns: [{\n        Header: 'Age',\n        accessor: 'age'\n      }, {\n        Header: 'Visits',\n        accessor: 'visits'\n      }, {\n        Header: 'Status',\n        accessor: 'status'\n      }, {\n        Header: 'Profile Progress',\n        accessor: 'progress'\n      }]\n    }];\n  }, []);\n  var data = useMemo(function () {\n    return makeData(20);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.tableCpn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s2(TableCpn, \"7zObr1GywQUmP9L3sfy/4IDluAk=\");\n\n_c = TableCpn;\nexport default TableCpn;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableCpn\");","map":{"version":3,"sources":["/home/kevinpak/Documents/rechcompt/app/components/_M-UI/table/table.tsx"],"names":["styles","useMemo","useTable","makeData","TableCpn","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","Header","accessor","tableCpn"],"mappings":"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","sourcesContent":["import styles from './table.module.scss'\nimport link from 'next/link'\nimport {useMemo} from 'react'\nimport { useTable } from 'react-table'\nimport makeData from './makeData'\n\nconst TableCpn = () => {\n\n  /*\n  *\n  */\n  const Table = ({ columns, data }) => {\n    // Use the state and functions returned from useTable to build your UI\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow,\n    } = useTable({\n      columns,\n      data,\n    })\n\n    return (\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    )\n  }\n\n  /*\n  *\n  */\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Name',\n        columns: [\n          {\n            Header: 'First Name',\n            accessor: 'firstName',\n          },\n          {\n            Header: 'Last Name',\n            accessor: 'lastName',\n          },\n        ],\n      },\n      {\n        Header: 'Info',\n        columns: [\n          {\n            Header: 'Age',\n            accessor: 'age',\n          },\n          {\n            Header: 'Visits',\n            accessor: 'visits',\n          },\n          {\n            Header: 'Status',\n            accessor: 'status',\n          },\n          {\n            Header: 'Profile Progress',\n            accessor: 'progress',\n          },\n        ],\n      },\n    ],\n    []\n  )\n\n\n  const data = useMemo(() => makeData(20), [])\n\n  return (\n    <>\n      <table className={styles.tableCpn}>\n      </table>\n    </>\n  )\n}\n\nexport default TableCpn"]},"metadata":{},"sourceType":"module"}